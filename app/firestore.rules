rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidUserData() {
      return request.resource.data.keys().hasAll(['email', 'createdAt']) &&
             request.resource.data.email == request.auth.token.email;
    }

    // User profiles
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow create: if isAuthenticated() && isValidUserData();
    }
    
    // User profiles (for profile completion)
    match /profiles/{userId} {
      allow read, write: if isOwner(userId);
      allow create: if isAuthenticated();
    }
    
    // Quests - users can only access their own quests
    match /quests/{questId} {
      allow read, write: if isAuthenticated() && 
                         resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
    }
    
    // Quest achievements - users can only access their own achievements
    match /achievements/{achievementId} {
      allow read, write: if isAuthenticated() && 
                         resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
    }
    
    // Learning patterns - users can only access their own data
    match /learningPatterns/{patternId} {
      allow read, write: if isAuthenticated() && 
                         resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
    }
    
    // Progress tracking - users can only access their own progress
    match /progress/{progressId} {
      allow read, write: if isAuthenticated() && 
                         resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
    }
    
    // Goals - users can only access their own goals
    match /goals/{goalId} {
      allow read, write: if isAuthenticated() && 
                         resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
    }
    
    // Default deny all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}